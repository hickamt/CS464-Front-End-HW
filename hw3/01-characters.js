/**
 * Created by: Todd Hickam | CS 464P/564P | Fall 2023
 * The following function will fetch Game of Thrones Characters from an API
 * and display them as cards on the page.
 * For styles, please refer to /hw3/styles.css
 */
const url = "https://thronesapi.com/api/v2/Characters";

/**
 * The following function uses template literals to create each character card
 * As the style guide suggests that we use javascript functions to create DOM elements
 * I have written a function (buildCharacterCard()) to do so below
 */
// const renderCharacters = function renderCharactersToDOM(characters) {
//   document.getElementById("root").innerHTML = characters
//     .map((character) => {
//       return `<div class="card character text-center">
//         <img class="character-img" src="${character.imageUrl}" alt="${character.fullName}" />
//         <div class="card-body">
//           <h2 class="character-name">${character.fullName}</h2>
//           <p class="character-title">${character.title}</p>
//         </div>
//       </div>`;
//     })
//     .join("");
// };

/** Generated by GitHub Copilot
/* function will build a character card
/* using the character object passed in
/* and return the card as a DOM element
/* to be appended to the DOM
/* @param {Object} character
/* @returns {HTMLElement}
*/
const buildCharacterCard = function buildHtmlCharacterCard(character) {
  // create card element
  // add classes to card element
  const card = document.createElement("div");
  card.classList.add("card", "character", "text-center");

  // create image element
  // add classes to image element
  // set src and alt attributes
  const image = document.createElement("img");
  image.classList.add("character-img");
  image.src = character.imageUrl;
  image.alt = character.fullName;

  // create card body element
  // add class to card body element
  const cardBody = document.createElement("div");
  cardBody.classList.add("card-body");

  // create name element
  // add class to name element
  // set textContent to character fullName
  const name = document.createElement("h2");
  name.classList.add("character-name");
  name.textContent = character.fullName;

  // create title element
  // add class to title element
  // set textContent to character title
  const title = document.createElement("p");
  title.classList.add("character-title");
  title.textContent = character.title;

  // append image to card
  // append name to card body
  // append title to card body
  cardBody.append(name, title);
  card.append(image, cardBody);

  return card;
};

// Function to map through the characters array
// and call the buildCharacterCard function
// passing in each character object
// and append the returned DOM element to the 'root' DOM element
const renderCharacters = function renderCharactersToDOM(characters) {
  const characterHTML = characters.map((character) => {
    return buildCharacterCard(character);
  });

  document.getElementById("root").append(...characterHTML);
};

// Using async/awiat fetch() syntax to fetch each character from the API
// and call the renderCharacters function passing in the response
// to render each character to the DOM
const fetchCharacters = async function fetchCharactersFromAPI() {
  try {
    const response = await fetch(url);
    renderCharacters(await response.json());
  } catch (error) {
    console.error(error);
  }
};

/**
 * Function to fetch characters from API
 * on page load
 * @param {Event} event
 */
window.addEventListener("load", () => {
  fetchCharacters();
});
